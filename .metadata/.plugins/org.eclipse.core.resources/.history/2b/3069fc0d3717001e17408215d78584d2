package com.eg.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;

import com.eg.binding.CoResponse;
import com.eg.entity.CoTriggerEntity;
import com.eg.entity.DcCaseEntity;
import com.eg.entity.EligDtlsEntity;
import com.eg.repository.CitizenAppRepository;
import com.eg.repository.CoTriggerRepository;
import com.eg.repository.DcCaseRepo;
import com.eg.repository.EligDtlsRepository;

public class CoServiceImpl implements CoService{
//we are using batch processing for that 
	@Autowired
	private CoTriggerRepository coTrgRepo;
	@Autowired
	private EligDtlsRepository eligRepo;
	@Autowired
	private DcCaseRepo dcCaseRepo;
	@Autowired
	private CitizenAppRepository appRepo;
	
	@Override
	public CoResponse processPendingTriggers() {
		//fetch all the pending triggers
		List<CoTriggerEntity> pendingTrgs = coTrgRepo.findByTrgStatus("pending");
		
		//process each pending triggers
		for(CoTriggerEntity entity :pendingTrgs) {
			//get eligibility data based on caseNum
			EligDtlsEntity elig = eligRepo.findByCaseNum(entity.getCaseNum());
			
			//get citizen data based on case num 
			Optional<DcCaseEntity> findById = dcCaseRepo.findById(entity.getCaseNum());
			if(findById.isPresent()) {
				DcCaseEntity dcCaseEntity = findById.get();
				Integer appId = dcCaseEntity.getAppId();
				appId
				
			}
			//generate pdf with elig details
			//send pdf to citizen mail
			//store the pdf & set the triggers as completed
			
		}
		 
				
		
		
		//return summary 
		
		return null;
	}
	

}
