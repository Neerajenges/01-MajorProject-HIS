package com.eg.service;

import java.awt.Color;
import java.io.File;
import java.io.FileOutputStream;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;

import com.eg.binding.CoResponse;
import com.eg.entity.CitizenAppEntity;
import com.eg.entity.CoTriggerEntity;
import com.eg.entity.DcCaseEntity;
import com.eg.entity.EligDtlsEntity;
import com.eg.repository.CitizenAppRepository;
import com.eg.repository.CoTriggerRepository;
import com.eg.repository.DcCaseRepo;
import com.eg.repository.EligDtlsRepository;
import com.lowagie.text.Document;
import com.lowagie.text.Font;
import com.lowagie.text.FontFactory;
import com.lowagie.text.PageSize;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Phrase;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;

public class CoServiceImpl implements CoService{
//we are using batch processing for that 
	@Autowired
	private CoTriggerRepository coTrgRepo;
	@Autowired
	private EligDtlsRepository eligRepo;
	@Autowired
	private DcCaseRepo dcCaseRepo;
	@Autowired
	private CitizenAppRepository appRepo;
	
	@Override
	public CoResponse processPendingTriggers() {
		CitizenAppEntity appEntity=null;
		//fetch all the pending triggers
		List<CoTriggerEntity> pendingTrgs = coTrgRepo.findByTrgStatus("pending");
		
		//process each pending triggers
		for(CoTriggerEntity entity :pendingTrgs) {
			//get eligibility data based on caseNum
			EligDtlsEntity elig = eligRepo.findByCaseNum(entity.getCaseNum());
			
			//get citizen data based on case num 
			Optional<DcCaseEntity> findById = dcCaseRepo.findById(entity.getCaseNum());
			if(findById.isPresent()) {
				DcCaseEntity dcCaseEntity = findById.get();
				Integer appId = dcCaseEntity.getAppId();
				Optional<CitizenAppEntity> appEntityOptional = appRepo.findById(appId);
				if(appEntityOptional.isPresent()) {
					appEntity = appEntityOptional.get();
				}
				
			}
			//generate pdf with elig details
			//send pdf to citizen mail
			//store the pdf & set the triggers as completed
			
		}
		 
				
		
		
		//return summary 
		
		return null;
	}
	private void generatePdf(EligDtlsEntity elig,CitizenAppEntity entity) {
		Document document = new Document(PageSize.A4);
		FileOutputStream fos=new FileOutputStream(new File(elig.getCaseNo()+".pdf"));
		
        PdfWriter.getInstance(document, fos);
         
        document.open();
        Font font = FontFactory.getFont(FontFactory.HELVETICA_BOLD);
        font.setSize(18);
        font.setColor(Color.BLUE);
         
        Paragraph p = new Paragraph("Eligibility Report", font);
        p.setAlignment(Paragraph.ALIGN_CENTER);
         
        document.add(p);
        
        PdfPTable table = new PdfPTable(5);
        table.setWidthPercentage(100f);
        table.setWidths(new float[] {1.5f, 3.5f, 3.0f, 2.5f, 3.0f});
        table.setSpacingBefore(10);
        
        PdfPCell cell = new PdfPCell();
        cell.setBackgroundColor(Color.BLUE);
        cell.setPadding(5);
         
        font = FontFactory.getFont(FontFactory.HELVETICA);
        font.setColor(Color.WHITE);
         
        cell.setPhrase(new Phrase("Name", font));
         
        table.addCell(cell);
         
        cell.setPhrase(new Phrase("Case Number", font));
        table.addCell(cell);
         
        cell.setPhrase(new Phrase("Plan Name", font));
        table.addCell(cell);
         
        cell.setPhrase(new Phrase("Plan Status", font));
        table.addCell(cell);
         
        cell.setPhrase(new Phrase("Plan Start Date", font));
        table.addCell(cell);
        
        cell.setPhrase(new Phrase("Plan End Date", font));
        table.addCell(cell);
        
        for(EligibilityDetails entity:entities) {
        	table.addCell(entity.getName());
        	table.addCell(entity.getEmail());
        	table.addCell(String.valueOf(entity.getMobile()));
        	//we are geting mobile as long so we have to convert it into String by using String.valueOf
        	table.addCell(String.valueOf(entity.getGender()));
        	table.addCell(String.valueOf(entity.getSsn()));
        }
        document.add(table);
        document.close();
	}
	

}
